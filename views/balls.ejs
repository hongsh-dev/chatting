<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>click game</title>
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css"
        integrity="sha384-xOolHFLEh07PJGoPkLv1IbcEPTNtaed2xpHsD9ESMhqIYd0nLMwNLD69Npy4HI+N" crossorigin="anonymous">
    <link rel="stylesheet" type="text/css" href="http://localhost:8080/css/balls.css">
</head>

<body>
    <%- include('nav.ejs') %>
        <div class="container">
            <h1 class="item0">click game</h1>

            <div class="item1">
                <div class="">
                    <button class="btn btn-outline-secondary btn-sm">ID</button>
                    <button id="userId" type="button" class="btn btn-outline-dark btn-sm" value="<%=user%>">
                        <%=user%>
                    </button>
                </div>
                <div class="input-group">
                    <button id="btnCreate" type="button" class="btn btn-danger">create
                        game</button>
                    <button id="btnReady" type="button" class="btn btn-danger" disabled="true">start</button>
                    <button id="btnExit" type="button" class="btn btn-danger">exit</button>
                    <input id="txtGameId" type="text" class="form-control" placeholder="Game ID please">
                    <button id="btnJoin" type="button" class="btn btn-danger">join
                        game</button>
                </div>
                <div id="divGameBang" class=""></div>
                <div id="divPlayers"></div>
                <div id="gameStartDiv" class="">
                    <h2 id="gameText" class="text-center" style="visibility:hidden">Game Started!</h2>
                </div>
                <div id="divBoard" style="pointer-events: none;"></div>
            </div>

            <div class="item2">
                <ul class="list-group item2_1">
                    <li class="list-group-item active item2_2" aria-current="true">rank</li>
                    <li id="rankList" class="list-group-item item2_3">
                        <ul class="list-group list-group-horizontal item2_4 ">
                            <li class="list-group-item">아이디</li>
                            <li class="list-group-item">승리수</li>
                        </ul>
                    </li>

                </ul>
            </div>
        </div>

        <script>
            //not good idea open websocket as soon as website is showed
            //websocket has been opend in port 9090
            let ws = new WebSocket("<%= wsUrl2 %>");


            const btnCreate = document.getElementById("btnCreate");
            const btnJoin = document.getElementById("btnJoin");
            const txtGameId = document.getElementById("txtGameId");
            const divPlayers = document.getElementById("divPlayers");
            const divBoard = document.getElementById("divBoard");
            const userId = document.getElementById("userId");
            const btnReady = document.getElementById("btnReady");
            const divGameBang = document.getElementById("divGameBang");
            const gameStartDiv = document.getElementById("gameStartDiv");
            const gameText = document.getElementById("gameText");
            const btnExit = document.getElementById("btnExit");
            const rankList = document.getElementById("rankList");

            let playerColor = null;
            let gameId = null;
            let ready = false;

            //very first connection
            ws.onopen = function () {
                const clientId = userId.value
                const payLoad = {
                    method: "connect",
                    clientId: clientId
                };
                console.log("onopen : " + clientId + " 유저가 접속하였습니다.");
                ws.send(JSON.stringify(payLoad));
            };

            //create game
            btnCreate.addEventListener("click", (e) => {
                console.log(userId.value + " 유저가 새로운 게임방을 만듭니다.");
                const payLoad = {
                    method: "create",
                    clientId: userId.value,
                };
                ws.send(JSON.stringify(payLoad));
            });

            //join
            btnJoin.addEventListener("click", (e) => {
                //if (gameId === null) gameId = txtGameId.value;
                //  console.log("join game : " + gameId + " client id " + clientId);
                //
                // const payLoad = {
                //  method: "join",
                //  clientId: clientId,
                //   gameId: gameId,
                //};
                //btnReady.removeAttribute("disabled");
                //ws.send(JSON.stringify(payLoad));
            });

            //start
            btnReady.addEventListener("click", (e) => {
                if (gameId === null) gameId = txtGameId.value;
                const payLoad = {
                    method: "start",
                    clientId: userId.value,
                    gameId: gameId,
                    ready: true,
                };
                btnReady.disabled = true;
                ws.send(JSON.stringify(payLoad));

            });

            //exit
            btnExit.addEventListener("click", (e) => {

                const gameId = btnExit.id;

                if (gameId === null) {
                    alert("게임 참여하지 않음");
                    return;
                }

                const payLoad = {
                    method: "exit",
                    gameId: gameId,
                    clientId: userId.value
                }

                console.log("exit 버튼 리스너에서 gameId : " + gameId);

                ws.send(JSON.stringify(payLoad));

            })


            //receive a message from server
            ws.onmessage = (message) => {
                //message.data, the data sever has been sent
                const response = JSON.parse(message.data);

                //create
                if (response.method === "create") {
                    const game = response.game;
                    console.log(game);
                    const bangJang = response.clientId;
                    const gameId = game.id;

                    console.log("크리에이트에서 : " + bangJang + " " + gameId);

                    const btn = document.createElement("button");
                    btn.textContent = bangJang + "가 만든 게임, Game ID : " + gameId;
                    btn.className = "btn btn-danger mt-1 mr-1";
                    btn.type = "button"
                    btn.id = gameId;
                    btn.name = bangJang;
                    btn.addEventListener("click", (e) => {
                        const payLoad = {
                            method: "join",
                            clientId: userId.value,
                            gameId: gameId,
                        };
                        txtGameId.value = btn.id;
                        //btnReady.disabled = false;
                        if (btn.name === userId.value) {
                            btnReady.disabled = false;
                        }
                        ws.send(JSON.stringify(payLoad));
                    });
                    divGameBang.appendChild(btn);
                    btn.click();
                }

                //update
                if (response.method === "update") {
                    var game = response.game;
                    checkUpdate(game);
                }

                //Broadcast Bang
                if (response.method === "makeBang") {

                    var bangArray = response.bangArray;
                    if (!Array.isArray(bangArray)) {
                        return;
                    }

                    bangArray.forEach((e) => {

                        if (!e) {
                            return;
                        }

                        var gameId = e.gameid;
                        var bangJang = e.clientid;
                        var btn = document.createElement("button");
                        btn.textContent = bangJang + "가 만든 게임, Game ID : " + gameId;
                        btn.className = "btn btn-danger mt-1 mr-1";
                        btn.type = "button"
                        btn.id = gameId
                        btn.name = bangJang;
                        btn.addEventListener("click", (c) => {

                            const payLoad = {
                                method: "join",
                                clientId: userId.value,
                                gameId: gameId
                            };
                            txtGameId.value = btn.id;
                            //btnReady.disabled = false;
                            if (btn.name === userId.value) {
                                btnReady.disabled = false;
                            }
                            ws.send(JSON.stringify(payLoad));
                        });

                        divGameBang.appendChild(btn);
                    })

                }

                //join
                if (response.method === "join") {
                    const game = response.game;
                    const clientId = response.clientId;
                    console.log("joined game id : " + game.id);

                    //while (divPlayers.firstChild)
                    //    divPlayers.removeChild(divPlayers.firstChild);

                    const chkPlayers = divPlayers.querySelectorAll("span");
                    chkPlayers.forEach((c) => {
                        divPlayers.removeChild(c)
                    })

                    game.clients.forEach((c) => {
                        const d = document.createElement("span");
                        d.style.background = c.color;
                        d.className = "btn btn-danger mt-1 mr-1";
                        d.textContent = c.clientId;
                        d.id = game.id
                        divPlayers.appendChild(d);
                        if (clientId === userId.value) {

                            playerColor = c.color;
                        }

                        console.log(c.clientId + " " + playerColor);
                    });

                    //while (divBoard.firstChild) divBoard.removeChild(divBoard.firstChild);

                    for (let i = 0; i < game.balls; i++) {
                        const b = document.createElement("button");
                        b.id = "ball" + (i + 1);
                        b.tag = i + 1;
                        b.className = "btn btn-outline-secondary mx-1 my-1";
                        b.textContent = i + 1;
                        b.style.width = "150px";
                        b.style.height = "150px";
                        b.style.backgroundColor = "#ffffff";
                        b.addEventListener("click", (e) => {
                            console.log(playerColor);
                            b.style.background = playerColor;
                            const payLoad = {
                                method: "play",
                                clientId: userId.value,
                                gameId: game.id,
                                ballId: b.tag,
                                color: playerColor,
                            };
                            ws.send(JSON.stringify(payLoad));
                        });
                        divBoard.appendChild(b);
                        divBoard.style = "pointer-events: none";
                    }


                    btnCreate.disabled = true;
                    btnJoin.disabled = true;
                    const btnBang = divGameBang.querySelectorAll("button");
                    btnBang.forEach(btn => {
                        btn.disabled = true;
                    });
                }

                //ready2
                if (response.method === "start2") {
                    divBoard.style = "pointer-events: auto";
                    gameText.style.visibility = "visible";

                    const payLoad = {}
                    ws.send
                }

                //win
                if (response.method === "win") {
                    var winner = response.winner;
                    console.log("winner : " + winner);
                    gameText.textContent = winner + " is winner";
                    divBoard.style = "pointer-events: none";

                    const payLoad = {
                        method: "restart",
                    }

                    ws.send(JSON.stringify(payLoad));
                }

                //join 할 때 exit에 게임아이디 할당
                if (response.method === "exit") {
                    const game = response.game;

                    btnExit.id = game.id;
                    console.log("exit버튼에 게임아이디 할당 : " + btnExit.id);
                }

                //exit 버튼을 누른 후 서버 리스폰을 받아옴
                if (response.method === "exit2") {
                    //divBoard.style = "pointer-events: none";
                    const noOne = response.noOne;
                    const gameId = response.gameId;

                    console.log("exit2에서 " + gameId);
                    const buttons = [...divGameBang.querySelectorAll('button')];
                    if (noOne === true) {
                        buttons.forEach((c) => {
                            console.log(c.id);
                            if (c.id === gameId) {
                                console.log("일치")
                                const payLoad = {
                                    method: "removeBang",
                                    gameId: gameId
                                }
                                ws.send(JSON.stringify(payLoad));
                            }
                        })
                    }
                    location.reload();
                }

                //업데이트
                if (response.method === "updateRank") {
                    var rank = response.rank;
                    console.log(rank);
                    rank.forEach(e => {
                        var ul = document.createElement("ul");
                        ul.className = "list-group list-group-horizontal"
                        var li2 = document.createElement("li");
                        li2.className = "list-group-item"
                        li2.textContent = e.clientid
                        ul.appendChild(li2);
                        var li3 = document.createElement("li");
                        li3.className = "list-group-item"
                        li3.textContent = e.win
                        ul.appendChild(li3);
                        rankList.appendChild(ul);
                    })
                }

                function checkUpdate(game) {
                    if (!game.state) return;

                    const buttons = [...divBoard.querySelectorAll('button')];

                    if (buttons === null) {
                        return;
                    }

                    for (const b of Object.keys(game.state)) {
                        var color = game.state[b];
                        var ballObject = document.getElementById("ball" + b);
                        ballObject.style.backgroundColor = color;
                        var indexToRemove = buttons.indexOf(ballObject);
                        buttons.splice(indexToRemove, 1);
                    }

                    buttons.forEach((c) => {
                        c.style.backgroundColor = "#ffffff";
                    })
                }
            };
        </script>
        <!-- var time = 10;
        var x = setInterval(() => {
            document.getElementById("time").innerHTML = time + "초";
            time--;
    
            if (time < 0) {
                document.getElementById("time").innerHTML = "게임 끝!"
                return;
            }
        }, 1000); -->
        <!-- btnBang.textContent = bangClientId + "가 만든 게임, Game ID : " + bangGameId;
                        btnBang.className = "btn btn-danger mt-1 mr-1";
                        btnBang.type = "button"

                        btnBang.addEventListener("click", (e) => {

                            const payLoad = {
                                method: "join",
                                clientId: clientId,
                                gameId: bangGameId
                            };

                            btnReady.disabled = false;
                            ws.send(JSON.stringify(payLoad));
                        });

                        divGameBang.appendChild(btnBang);
                        console.log("리스너에서 : " + bangGameId + " " + bangClientId); -->

</body>

</html>