<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>click game</title>
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css"
        integrity="sha384-xOolHFLEh07PJGoPkLv1IbcEPTNtaed2xpHsD9ESMhqIYd0nLMwNLD69Npy4HI+N" crossorigin="anonymous">
</head>

<body>
    <%- include('nav.ejs') %>
        <div class="container mt-3">
            <h1>click game</h1>
            <div>
                <div class="mt-2">
                    <button class="btn btn-outline-secondary btn-sm">ID</button>
                    <button id="userId" type="button" class="btn btn-outline-dark btn-sm" value="<%=user%>">
                        <%=user%>
                    </button>
                </div>
                <div class="input-group mt-2">
                    <button id="btnCreate" type="button" class="btn btn-danger mr-1">create
                        game</button>
                    <button id="btnReady" type="button" class="btn btn-danger mr-1" disabled="true">ready</button>
                    <button id="btnExit" type="button" class="btn btn-danger">exit</button>
                    <input id="txtGameId" type="text" class="form-control mr-1" placeholder="Game ID please">
                    <button id="btnJoin" type="button" class="btn btn-danger">join
                        game</button>
                </div>
            </div>
            <div id="divGameBang" class="mt-2"></div>
            <div id="divPlayers"></div>
            <div id="gameStartDiv" class="m-1">
                <h2 id="gameText" class="text-center" style="visibility:hidden">Game Started!</h2>
            </div>
            <div id="time"></div>
            <div id="divBoard" style="pointer-events: none;"></div>
        </div>
        </div>
        <script>
            //not good idea open websocket as soon as website is showed
            //websocket has been opend in port 9090
            let ws = new WebSocket("ws://10.6.1.1:9090");


            const btnCreate = document.getElementById("btnCreate");
            const btnJoin = document.getElementById("btnJoin");
            const txtGameId = document.getElementById("txtGameId");
            const divPlayers = document.getElementById("divPlayers");
            const divBoard = document.getElementById("divBoard");
            const userId = document.getElementById("userId");
            const btnReady = document.getElementById("btnReady");
            const divGameBang = document.getElementById("divGameBang");
            const gameStartDiv = document.getElementById("gameStartDiv");
            const gameText = document.getElementById("gameText");
            const btnExit = document.getElementById("btnExit");
            //var childNodes = document.getElementById("container").getElementsByTagName('*');

            let clientId = null;
            let playerColor = null;
            let gameId = null;
            let ready = false;

            //very first connection
            ws.onopen = function () {
                clientId = userId.value
                const payLoad = {
                    method: "connect",
                    clientId: clientId
                };
                console.log("onopen : " + clientId);
                ws.send(JSON.stringify(payLoad));
            };



            //create game
            btnCreate.addEventListener("click", (e) => {
                console.log("create btn : " + clientId);
                const payLoad = {
                    method: "create",
                    clientId: clientId,
                };
                ws.send(JSON.stringify(payLoad));
            });

            //join
            btnJoin.addEventListener("click", (e) => {
                //if (gameId === null) gameId = txtGameId.value;
                //  console.log("join game : " + gameId + " client id " + clientId);
                //
                // const payLoad = {
                //  method: "join",
                //  clientId: clientId,
                //   gameId: gameId,
                //};
                //btnReady.removeAttribute("disabled");
                //ws.send(JSON.stringify(payLoad));
            });

            //ready
            btnReady.addEventListener("click", (e) => {
                if (gameId === null) gameId = txtGameId.value;
                console.log(gameId);
                console.log("ready btn clicked");
                const payLoad = {
                    method: "ready",
                    clientId: clientId,
                    gameId: gameId,
                    ready: true,
                };
                btnReady.disabled = true;
                ws.send(JSON.stringify(payLoad));

            });

            //exit
            btnExit.addEventListener("click", (e) => {

                const gameId = btnExit.id;

                if (gameId === null) {
                    alert("게임 참여하지 않음");
                    return;
                }

                const payLoad = {
                    method: "exit",
                    gameId: gameId,
                    clientId: clientId
                }

                console.log("exit 버튼 리스너에서 gameId : " + gameId);

                ws.send(JSON.stringify(payLoad));

            })


            //receive a message from server
            ws.onmessage = (message) => {
                //message.data, the data sever has been sent
                const response = JSON.parse(message.data);

                //create
                if (response.method === "create") {
                    gameId = response.game.id;
                    clientId = response.clientId;
                    var gameEntity = response.game;
                    const b = document.createElement("button");
                    txtGameId.value = gameId;

                    //while (divGameBang.firstChild)
                    //divGameBang.removeChild(divGameBang.firstChild);

                    console.log(gameEntity);
                    b.textContent = clientId + "가 만든 게임, Game ID : " + gameEntity.id;
                    b.className = "btn btn-danger mt-1 mr-1";
                    b.type = "button"
                    b.addEventListener("click", (e) => {
                        const payLoad = {
                            method: "join",
                            clientId: clientId,
                            gameId: gameId,
                        };
                        btnReady.disabled = false;
                        ws.send(JSON.stringify(payLoad));
                    });
                    divGameBang.appendChild(b);
                }

                //update
                if (response.method === "update") {
                    var game = response.game;
                    if (!game.state) return;
                    const buttons = [...divBoard.querySelectorAll('button')];

                    //console.log(buttons);

                    for (const b of Object.keys(game.state)) {
                        var color = game.state[b];
                        var ballObject = document.getElementById("ball" + b);
                        ballObject.style.backgroundColor = color;
                        var indexToRemove = buttons.indexOf(ballObject);
                        buttons.splice(indexToRemove, 1);
                    }

                    buttons.forEach((c) => {
                        c.style.backgroundColor = "#ffffff";
                    })
                }

                //Broadcast Bang
                if (response.method === "makeBang") {
                    var bangGameId = response.gameId;
                    var bangClientId = response.clientId
                    const b = document.createElement("button");

                    // while (divGameBang.firstChild)
                    //   divGameBang.removeChild(divGameBang.firstChild);

                    if (bangGameId && bangClientId) {
                        b.textContent = bangClientId + "가 만든 게임, Game ID : " + bangGameId;
                        b.className = "btn btn-danger mt-1 mr-1";
                        b.type = "button"
                        txtGameId.value = bangGameId;
                        b.addEventListener("click", (e) => {

                            const payLoad = {
                                method: "join",
                                clientId: clientId,
                                gameId: bangGameId
                            };

                            btnReady.disabled = false;
                            ws.send(JSON.stringify(payLoad));
                        });
                        divGameBang.appendChild(b);
                    }

                }

                //join
                if (response.method === "join") {
                    const game = response.game;
                    console.log("joined game id : " + game.id);
                    const d = document.createElement("span");

                    while (divPlayers.firstChild)
                        divPlayers.removeChild(divPlayers.firstChild);

                    game.clients.forEach((c) => {
                        console.log(c.color);
                        d.style.background = c.color;
                        d.className = "btn btn-danger mt-1 mr-1";
                        d.textContent = c.clientId;
                        d.id = game.id
                        divPlayers.appendChild(d);
                        console.log("c id : " + c.clientId + ' clientId : ' + clientId);
                        if (c.clientId === clientId) {
                            playerColor = c.color;
                        }
                        console.log(playerColor);
                    });

                    while (divBoard.firstChild) divBoard.removeChild(divBoard.firstChild);

                    console.log(d.id);
                    console.log(game.id);
                    if (d.id === game.id) {
                        for (let i = 0; i < game.balls; i++) {
                            console.log("why not working");
                            const b = document.createElement("button");
                            b.id = "ball" + (i + 1);
                            b.tag = i + 1;
                            b.className = "btn btn-outline-secondary mx-1 my-1";
                            b.textContent = i + 1;
                            b.style.width = "150px";
                            b.style.height = "150px";
                            b.addEventListener("click", (e) => {
                                console.log(playerColor)
                                b.style.background = playerColor;
                                const payLoad = {
                                    method: "play",
                                    clientId: clientId,
                                    gameId: game.id,
                                    ballId: b.tag,
                                    color: playerColor,
                                };
                                ws.send(JSON.stringify(payLoad));
                            });
                            divBoard.appendChild(b);
                        }
                    }


                }

                //ready2
                if (response.method === "start") {
                    divBoard.style = "pointer-events: auto";
                    gameText.style.visibility = "visible";

                    const payLoad = {

                    }
                    ws.send

                }

                //win
                if (response.method === "win") {
                    var winner = response.winner;
                    console.log("winner : " + winner);
                    btnReady.disabled = false;
                    gameText.textContent = winner + " is winner";
                    divBoard.style = "pointer-events: none";

                    const payLoad = {
                        method: "restart",
                    }

                    ws.send(JSON.stringify(payLoad));
                }

                //exit
                if (response.method === "exit") {
                    const game = response.game;

                    btnExit.id = game.id;
                    console.log("exit버튼에 게임아이디 할당 : " + btnExit.id);
                }

                if (response.method === "exit2") {
                    divBoard.style = "pointer-events: none";
                }
            };
        </script>
        <!-- var time = 10;
        var x = setInterval(() => {
            document.getElementById("time").innerHTML = time + "초";
            time--;
    
            if (time < 0) {
                document.getElementById("time").innerHTML = "게임 끝!"
                return;
            }
        }, 1000); -->
</body>

</html>